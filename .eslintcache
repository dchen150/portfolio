[{"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\index.js":"1","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\reportWebVitals.js":"2","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\App.js":"3","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\constants\\theme.js":"4","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\intro.js":"5","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\loop.js":"6","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\card.js":"7","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\assets\\data.js":"8","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\experience.js":"9","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\project.js":"10","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\dropdown.js":"11"},{"size":558,"mtime":1609728413121,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1509,"mtime":1609722278871,"results":"15","hashOfConfig":"13"},{"size":557,"mtime":1609652978736,"results":"16","hashOfConfig":"13"},{"size":2907,"mtime":1609722689296,"results":"17","hashOfConfig":"13"},{"size":917,"mtime":1609555939451,"results":"18","hashOfConfig":"13"},{"size":538,"mtime":1609633131623,"results":"19","hashOfConfig":"13"},{"size":9987,"mtime":1609734823692,"results":"20","hashOfConfig":"13"},{"size":4064,"mtime":1609722419796,"results":"21","hashOfConfig":"13"},{"size":768,"mtime":1609730709996,"results":"22","hashOfConfig":"13"},{"size":3857,"mtime":1609730696896,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"frxu8q",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\index.js",[],["48","49"],"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\App.js",[],"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\constants\\theme.js",[],"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\intro.js",[],"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\loop.js",[],"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\card.js",[],"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\assets\\data.js",[],"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\experience.js",["50"],"import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Card from './card'\r\nimport { DARK } from '../constants/theme'\r\n\r\nconst Container = styled.div`\r\n    padding: 10px 30px 10px 30px;\r\n`\r\n\r\nconst FlexBox = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst SideBar = styled.div`\r\n    background-color: ${(props) => props.theme.SIDE_BAR_BACKGROUND};\r\n    width: 30%;\r\n    padding: 30px;\r\n    border-top-left-radius: 8px;\r\n    border-bottom-left-radius: 8px;\r\n`\r\n\r\nconst Header = styled.p`\r\n    color: ${(props) => props.theme.TEXT};\r\n    font-weight: bold;\r\n    margin-bottom: 0px;\r\n    font-size: 16px;\r\n`\r\n\r\nconst SelectedItem = styled.p`\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    color: ${(props) => props.theme.TEXT};\r\n    font-weight: bold;\r\n    padding: 6px;\r\n    margin: 2px;\r\n    background-color: ${(props) => props.theme.HIGHLIGHT};\r\n`\r\n\r\nconst Tag = styled.span`\r\n    display: inline;\r\n    border-radius: 3px;\r\n    color: ${(props) => props.theme.TEXT};\r\n    font-weight: bold;\r\n    padding: 6px;\r\n    margin: 2px;\r\n    background-color: ${(props) => props.theme.HIGHLIGHT};\r\n    min-width: 0;\r\n`\r\n\r\nconst Company = styled.p`\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    color: ${(props) => props.theme.UNSELECTED};\r\n    font-weight: bold;\r\n    padding: 6px;\r\n    margin: 2px;\r\n    &:hover {\r\n        color: ${(props) => props.theme.TEXT};\r\n        background-color: ${(props) => props.theme.CARD_BACKGROUND};\r\n    }\r\n`\r\n\r\nconst ExperienceContent = styled.div`\r\n    width: 70%;\r\n    padding-right: 10px;\r\n`\r\n\r\nconst Logo = styled.img`\r\n    height: 70px;\r\n    width: 70px;\r\n    margin-left: 15px;\r\n`\r\n\r\nconst HeaderContainer = styled.div`\r\n    margin: 20px;\r\n`\r\n\r\nconst Position = styled.p`\r\n    color: ${(props) => props.theme.SUBHEADER}\r\n`\r\n\r\nconst ListItem = styled.li`\r\n    color: ${(props) => props.theme.TEXT}\r\n`\r\n\r\nfunction Experience (props) {\r\n    const { theme, experiences, header } = props\r\n    const [currExperience, setCurrExperience] = useState(experiences[0])\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault()\r\n        setCurrExperience(experiences.find((experience) => experience.company === e.target.textContent))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Card theme={theme} width={700}>\r\n                <FlexBox>\r\n                    <SideBar theme={theme}>\r\n                        <Header theme={theme}>{header}</Header>\r\n                        {\r\n                            experiences.map((experience) => {\r\n                                return currExperience === experience ? (\r\n                                    <SelectedItem theme={theme}>{experience.company}</SelectedItem>\r\n                                ) : (\r\n                                    <Company theme={theme} onClick={handleChange}>{experience.company}</Company>\r\n                                )\r\n                            })\r\n                        }\r\n                    </SideBar>\r\n                    <ExperienceContent>\r\n                        <FlexBox>\r\n                            <Logo alt={currExperience.company} src={theme === DARK ? currExperience.dark : currExperience.light} />\r\n                            <HeaderContainer>\r\n                                <Header theme={theme}>{currExperience.company}</Header>\r\n                                <Position theme={theme}>{currExperience.time} // {currExperience.title}</Position>\r\n                            </HeaderContainer>\r\n                        </FlexBox>\r\n                        <ul>\r\n                            {currExperience.description.map((point) => <ListItem theme={theme}>{point}</ListItem>)}\r\n                        </ul>\r\n                        <div style={{ padding: '0px 0px 15px 40px', display: 'flex' }}>\r\n                            {currExperience.tags.map((tag) => <Tag theme={theme}>{tag}</Tag>)}\r\n                        </div>\r\n                    </ExperienceContent>\r\n                </FlexBox>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Experience","C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\project.js",[],"C:\\Users\\Derek\\Documents\\Personal Projects\\personal-portfolio\\src\\components\\dropdown.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":117,"column":78,"nodeType":"57","endLine":117,"endColumn":82},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation"]